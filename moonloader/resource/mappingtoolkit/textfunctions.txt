Игрок:
#afk(*playerid)# - кол-во секунд AFK игрока
#playerid# - вернет ID игрока.
#sc# - вернет социальный рейтинг игрока
#anim(*playerid)# - вернуть числовой индекс активной анимации игрока
#skin(*playerid)# - вернуть модель скина игрока
#acid(*playerid)# - глобальный ID игрока
#int(*playerid)# - интерьер игрока
#vip(*playerid)# - статус вип
#target(*playerid)# - вернет ид игрока на которого наведен игрок с помощью ПКМ
#score(*playerid)# - вернуть кол-во очков в TABe игрока
#money(*playerid)# - вернуть кол-во грошей игрока
#health(*playerid)# - вернуть уровень здоровья игрока
#armour(*playerid)# - вернуть уровень брони игрока
#name(*playerid)# - вернуть никнэйм игрока по playerid
#speed(*playerid)# - скорость игрока
#speedX/Y/Z(*targetid)# - скорость игрока/транспорта по определенной координате
#drunk(*playerid)# - вернуть ур. опьянения игрока
#channel(*playerid)# - вернуть канал игрока (/channel)
#ping(*playerid)# - пинг игрока
#ban(*playerid)# - есть ли варн у игрока (0/1)
#netstat(*playerid)# - процент потери пакетов
#moder(*playerid)# - ур. модерки игрока в мире (хост - 999)
#mute(*playerid)# - Вернёт 0 если у игрока нет /vmute или 1 если есть.
#muteTime(*playerid)# - Вернёт значение мута игрока в секундах.
#freeze(*playerid)# - заморожен ли
#freezeTime(*playerid)# - насколько заморожен в милисекундах
#death(*playerid)# - кол-во секунд стадии смерти (РП) игрока
#clist(*playerid)# - цвет клиста (цвет никнейма игрока)
#fightStyle(*playerid)# - стиль боя
#pame(slot, *playerid)# - вернет строку /pame игрока из слота описания.
#chatStyle(*playerid)# - Вернёт стиль чата игрока.
#gm(*playerid)# - Вернёт 1 если включен /gm.
#key(side, *playerid)# - [?] | Side:
  0 - получение клавиш
  1 - получение горизонтальных клавиш (к примеру A или D)
  2 - получение вертикальных клавиш (к примеру W или S)
#specState(*playerid)# - в наблюдении
#specTarget(*playerid)# - за кем наблюдает (вернет ид)

Позиция:
#xyz(*playerid)# - вернуть позицию игрока
#x(*playerid)# #y(*playerid)# #z(*playerid)# - определить позицию игрока
#fa(*playerid)# - угол поворота игрока
#nearply(*playerid)# - Вернёт айди ближайшого игрока к игроку *playerid
#getZ(x y)# - Вернёт коорднату Z по X Y.
#camxyz(*playerid)#  - вернуть позицию камеры игрока
#camx(*playerid)# #camy(*playerid)# #camz(*playerid)# - позиция камеры
#camVecXYZ# or #camVecX/Y/Z# - вернет текущее направление движения игрока в трехмерном пространстве (3D).
#cameraMode(*playerid)# - Вернёт состояние камеры.
#customRaycast(x y z angle dist 0/1 x/y/z/xyz)#
  Рэйкст по позиции только со своими координатами.
#camVecXYZ# и #camVecX/Y/Z# - направление движения игрока в 3D пространстве
#front(dist <x/y>, *playerid)# - вернёт координате x/y на растоянии dist от игрока.
#raycast(cam/pos dist col coord)# - возврат коллизии
#getAngle(x1 y1 ×2 y2)# - Вернёт FA от x1 y1 до x2 y2.
#GetDistPlayer(targetid, *playerid)# - вернет дистанцию к targetid
#GetDistPos(x y z *playerid)# - вернет дистанцию к позиции x y z
#GetDist(x1 y1 z1 ×2 y2 z2)# 
  Вернёт расстояние от координат  x1 y1 z1 до x2 y2 z2.
#zone(*playerid)# - название района игрока
#getzone(x, y)# - названия района по x, y
#getzoneid(x, y)# - id района по x, y (исп. в проверке на район в КБ)  
#waterlvl(*playerid)# - вернуть уровень нахождения игрока в море

Оружие:
#gun(*playerid)# or #weapon(*playerid)# - ID оружия игрока
#ammo(*playerid)# - кол-во патронов в активном слоте оружия игрока
#weaponState(*playerid)# or #gunState(*playerid)# - статус оружия
  1 unknown, 0 no bullets, 1 last bullet, 2 more bullets, 3 reloading
#gunName(*playerid)# - вернуть названия оружия в активном слоте игрока
#hr(*playerid)# - соотношение попаданий к выстрелам (процент попаданий)
#taser(*playerid)# - Вернёт 1 если есть тайзер.
#bodypart(*playerid)# - вернет кость по которой нанесен урон
#issuerGun(*playerid)# - вернет ид оружия с которого нанесен урон
#zoom(*playerid)# - Возвращает уровень прицеливания игрока от 0.0 до 100.0.
#gunModel(gunid)#/#weaponModel(gunid)# - возвращает ID объекта оружия.
  (на несуществующее такое как 20, 21 вернет -1)

Списки игроков:
#playerCount(category value)#
  Вернёт количество игроков у которых совпадет category с value.
  category: team, skin, veh, data, wanted, action, dead, alive, 
  score, gun/weapon, channel, afk, vip, taser, surfingveh, int, 
  attach, attachmodel, retval, vehseat
#playerList(item category value)#
  Вернёт ID игрока по месту item у которого совпадет category(см. выше) с value.
#playerTop(position category **value cond *value1 *value2)#
  возвращает ID игрока с наибольшим значением параметра по определенной позиции.
  * - необязательное значение, ** - значение необязательно если не используется cond,
  если category не требует **value пишите 0
  Значения category: data, wanted*, score*, afk*, retval, money*
  cond - определенное условие по котором будут выбираться игроки для топа, 
  список условий:
  team <id>, skin <id>, veh <modelid>, wanted <lvl>, int <id>, retval <id> <value>, vehseat <id>,
  attach <slot>, attachmodel <slot> <modelid>, surfingveh <vehid>, taser, afk *<+sec>, channel <id>,
  gun/weapon <id>, score <value>, alive, dead , action <actionid>
#randomPlayer(*category)# - Вернёт рандомного игрока по category.
  list: team <id>, skin <id>, veh <id>, data <slot> <value>, 
  wanted <value>, action <id>, dead, alive
#randomPlayer(team 1)# - вернуть случайного игрока из 1 команды.
#randomPlayer(skin 228)# - вернуть случайного игрока с скином 228.
#randomPlayer(veh 411)# - вернуть случайного игрока в транспорте модель 411.
#randomPlayer(wanted 6)# - вернуть случайного игрока у которого 6 звезд розыска.
#randomPlayer(action 3)# - вернуть случайного игрока у которого специальное дейсвтие равно 3. Таблица специальных действий: https://open.mp/docs/scripting/resources/specialactions
#randomPlayer(dead)# - вернуть случайного игрока в состоянии смерти.
#randomPlayer(alive)# - вернуть случайного живого игрока.

Команды:
#team(*playerid)# - вернуть ID команды (/team) игрока
#teamName(*playerid)# - название команды игрока
#GetTeamName(teamid)# - Возвращает название команды по ее ID.
#teamOnline(teamid)# - вернуть онлайн команды (/team) по teamid
#vehTeam(*playerid)# - тима транспорта

Транспортные средства:
#vehicle(*playerid)# or #veh(*playerid)# - вернуть ID т/c из /dll
#vdata(vehid slot)# - вернуть массив транспорта (СЛОТ: 0-49)
#GetDistVeh(vehid, *playerid)# - вернет дистанцию к vehid
#vehPos(vehid)# - вернет позицию ТС по vehid
#vehColor(*playerid)# - цвет автомобиля в HEX формате
#vehColor1(*playerid)# - цвет автомобиля 1
#vehColor2(*playerid)# - цвет автомобиля 2
#vehModel(*playerid)## - вернет модель ТС игрока по playerid
#GetVehModel(vehid)# - вернет модель ТС по vehid
#vehHealth(*playerid)# - вернуть уровень здоровья ТС
#gearState(vehid)# - возвращает положение шасси в самолетах.
  0 - опущены / 1 - спрятаны
#surfingVeh(*playerid)# - вернет ID автомобиля на котором стоит игрок
  ИНАЧЕ ВОЗВРАЩАЕТ 65535. Работает только при нахождении водителя в ТС.
#nearveh(radius, *playerid)# - вернет ближ. автомобиль в радиусе radius
#vehParam(vehicleid param)# - вернет параметр автомобиля,
  вместо vehicleid можно указать 0 - заменит на ид вашего транспорта.
  0 - engine - получает статус двигателя, если 1 - двигатель включен.
  1 - lights - получает статус фар, если 1 - включены.
  2 - alarm - получает сигнал тревоги, если 1 - звучит.
  3 - doors - получает статус дверей, если 1 - закрыты.
  4 - bonnet - получает статус капота, если 1 - открыт.
  5 - boot - получает статус багажника, если 1 - открыт.
  6 - objective - метка на карте, если 1 - включено.
  аналог параметров из действия “изменить параметры ТС
#vehdriver(vehid)# - вернет ID водителя машины vehid
#gmcar(vehid)# - вернет статус ГМ кара автомобиля vehid
#siren(vehid)# - вернет статус cирены автомобиля по vehid
#getVehName(vehid)# - вернет названия модели машины по VEHID
#getModelName(modelid)# - вернет название модели машины по MODELID
#getVehName(vehid)# - вернет названия машины по vehid
#vehSeat(*playerid)# - вернуть место игрока в авто
#vehCount# - вернет кол-во машин в мире
#vehTeam(*playerid)# - тима транспорта
#GetVehAccess(vehid)# - доступ к транспорту

Объекты:
#GetDistObject(objectid, *playerid)# - вернет дистацию к объекту
#omodel(objectid)# - вернет модель объекта по мировому objectid
#oxyz(objectid)# #ox(objectid)# #oy(objectid)# #oz(objectid)#
  вернет координаты объекта по мировому objectid
#rxyz(objectid)# #rx(objectid)# #ry(objectid)# #rz(objectid)#
  вернет угол поворота по осям объекта по мировому objectid
#nearObj(dist modelid)# - вернет ближ. объект в радиусе dist меетров
  НЕ БОЛЬШЕ 200 МЕТРОВ). Необязательный параметр: modelid
#nearobjxyz(dist modelid x y z)# - вернет ближ. объект к 
  определённым координатам в радиусе dist метров (НЕ БОЛЬШЕ 200 МЕТРОВ)
  Необязательный параметр: modelid
#oMove(objectid)# - вернет статус движется ли объект - 0/1
#oMoveXYZ(objectid)# - вернет координаты к которым движется объект
#oMoveX(objectid)# #oMoveY(objectid)# #oMoveZ(objectid)#
#oArray(objectid *slot)# - вернет массив объекта
#oState(objectid)# - вернет статус отображения объекта
#objectCount# - вернет кол-во объектов в мире
#maxObjectCount# - вернет макс. возможное кол-во объектов в мире

3d тексты:
#getDistAction(actionid)# - вернет дистанцию к /action
#actionXYZ(actionid)# - вернет координаты /action
#actionX(actionid)# #actionY(actionid)# #actionZ(actionid)# 
#actionText(actionid)# - вернет текст акшиона

Данные мира:
#online# - вернуть онлайн мира
#isWorld(playerid)#isWorld(playerid)# - Вернёт 1 если игрок в мире.
#time# - вернуть время мира
#weather# - вернуть погоду мира
#worldName# - вернет название мира
#worldDesc# - вернет описание мира

Блоки, переменные и массивы:
#ext(blockid value)# - вернет строку значения командного блока
#retval(id, *playerid)# - Числовые значения.
#retstr(*id, **playerid)# - Текстовые значения.
#var(HelloMessage)# - вернет значение переменной HelloMessage.
#pvar(varname, id)# - Возвращает данные переменной игрока.
 id игрока - не является обязательным параметром. 
#random(0, 100)# - вернет случайное число от 0 до 100.
#vdata(vehicleid num)# - Массив транспорта.
#oArray(objectid slot)# - значение массива slot объекта objectid (0-10)
#array(slot, *playerid)# - вернуть массив (СЛОТ: 0-26) игрока.
#server(slot)# - вернуть массив сервера (СЛОТ: 0-49)
#tick# - возвращает количество тиков с начала работы сервера, 1 тик - 1 мс.
#timestamp# - секунды

Действия со строками:
#strfind(str, substr, caps)#
  найдет substr в str и вернет символ начала substr в str
  CAPS: 0/1 - учитывать ли регистр, по умолчанию: учитывать (1))
#strfindtimes(str, substr, caps)#
  найдет сколько раз substr встречается в str. 
  CAPS: 0/1 - учитывать ли регистр, по умолчанию: учитывать (1)
#strcmp(str, substr, caps)#{
  проверит идентичные строки и вернет символ начала substr в str.
  CAPS: 0/1 - учитывать ли регистр, по умолчанию: учитывать
  (1). Функция подходит для сравнения введенных параметров (паролей,
  которые содержат символы, а не только числа).
#strdel(str, start, stop)#
  удалит со str символы начиная с start и заканчивая stop
#strlen(str)# - вернет длину строки str
#strins(str, substr, index)# - вставит substr в str на index место
#sscanf(text, d, &)# - функция для разделения параметров из text
  d - порядковый номер элемента
  & - разделитель
#getDate(*category)# list: day, month, year, days/daynum - Вернёт дату по категории.
#getTime(*category)# list: hour, minute, second - Вернёт время по категории.
#timeF(sec *separator)# - преобразовывает секунды в счетчик минут.
  *separator - значение по умолчанию: “:”

Действия с числами:
#random(numb1, numb2)# - вернет случайное число
#floatnum(numb1 type numb2)# - действия с плавающими числами. 
#round(number *method)# or #floatround(number *method)#  methods:
  round - метод по дефолту, округляет к ближ. целому числу
  floor - округляет вниз
  ceil - округляет вверх
  tozero - округляет ближе к 0
#log(number base)# - логарифм
#sin(number *method)# - синус от числа number
#cos(number *method)# - косинус от числа number
#tan(number *method)# - тангенс от числа number
  methods: radian - по дефолту, degrees, grades
#atan2(x, y)# - возвращает угол между положительной осью X
  и отрезком между центром и точкой (x, y)
#sqroot(number)# - найдет квадратный корень из числа number
#power(numb1 numb2)# - возведет число numb1 в степень numb2
#min(value1 value2)# - вернет наименьшее из двух чисел
#max(value1 value2)# - вернет наибольшее из двух чисел
#clamp(value min_value max_value)# - сведет число value к диапазону чисел.
  Если число меньше min_value то оно вернет min_value
  если больше max_value то вернет max_value
#isInRange(target num1 num2)#
  0/1 находится ли число target в диапазоне num1 и num2 включительно
  
Проходы:
#passinfo(*playerid)# - вернет ID ближ. pass к игроку.
#pXYZ(passid)# #pX(passid)# #pY(passid)# #pZ(passid)# - координаты /pass.
#pRX(passid)# - Угол поворота /pass, при указании координат /pass.
#pInt(passid)# - Айди интерьера в котором назначена точка входа /pass.
#pLock(passid)# - Статус /pass. (0 - открыт / 1 - закрыт)
#pOwner(passid)# - ?
#pVehicle(passid)# - Вернёт 0 если в транспорте нельзя использовать /pass или 1 если можно.
#pModel(passid)# - модель pass
#pStatus(passid)# or #pState(passid)# - Вернёт 0 если /pass не создан или 1 если создан.
#pTeam(passid)# - Вернёт айди команды которая может пользоваться /pass. Отсчёт команд идёт с 0. (-1 если все)

Актеры:
#arActor(dist, skinid)# - вернет ближ. актера в радиусе radius. 
  Необязательный параметр: модель скина.
#torXYZ(actorid)# #actorX(actorid)# #actorY(actorid)# #actorZ(actorid)#
#tDistActor(actorid, *playerid)# - вернет координаты актера
#torState(actorid)# or #actorStatus(actorid)# - вернет статус актера
#torAnim(actorid)# - вернет анимацию актера из списка
#torAltAnim(actorid)# - вернет альтернативную анимацию актера из списка
#torSkin(actorid)# - вернет модель скина актера
#torHealth(actorid)# - вернет уровень здоровья актера
#torInvulnerable(actorid)# or #actorGM(actorid)# - вернет статус GM’a у актера
#lastActor(*playerid)# - Последний редактируемый игроком актер.
#targetActor#

Аттачи:
#attach(id, *playerid)# - вернет ид аттача
#attachModel(id, *playerid)# - вернет modelid аттача
#isAttachModel(modelid, *playerid)# - модель объекта
#attachBone(slot, *playerid)# - кость
#attachOffsetXYZ(slot, *playerid)# - смещение аттача
#attachOffsetX, #attachOffsetY, #attachOffsetZ(slot, *playerid)# -
  смещение аттача по оси
#attachRotXYZ(slot, *playerid)# - позиция аттача
#attachRotX(slot, *playerid)# - позиция X
#attachRotY(slot, *playerid)# - позиция Y
#attachRotZ(slot, *playerid)# - позиция Z
#attachScaleXYZ(slot, *playerid)# - масштабирование аттача
#attachScaleX(slot, *playerid)# - масштабирование по оси X
#attachScaleY(slot, *playerid)# - масштабирование по оси Y
#attachScaleZ(slot, *playerid)# - масштабирование по оси Z

Аттачи на транспорт:
#vAttach(slot, vehicleid)#
#vAttachModel(slot,*vehicleid)#
#isvAttachModel(modelid, vehicleid)#
#vAttachXYZ(slot, vehicleid)# - положение аттача (сразу 3 значения)
#vAttachX, vAttachY, vAttachZ(slot, vehicleid)# - положение аттача
#vAttachRotXYZ(slot, vehicleid)# - порот аттача (сразу 3 значения)
#vAttachRotX, #vAttachRotY, #vAttachRotZ(slot, vehicleid)# - поворот аттача по оси
#vAttachOffsetXYZ(slot, vehicleid)# - смещение аттача
#vAttachOffsetX, vAttachOffsetY, vAttachOffsetZ(slot, vehicleid)#

Ворота:
#gateStatus(gateid)# or #gateState(gateid)#
#gateID(gateid)# (MODEL)
#gateTeam(gateid)# - для какой команды
#gateType(gateid)# - активация на клавишу (0/1)
#gateLocal(gateid)#
#gateSpeed(gateid)# - скорость перемещения
#gateStartPosXYZ(gateid)# - стартовая позиция
#gateStartPosX(gateid)# - стартовая позиция X
#gateStartPosY(gateid)# - стартовая позиция Y
#gateStartPosZ(gateid)# - стартовая позиция Z
#gateStartPosRXYZ(gateid)#  - значение поворота в начале движения
#gateStartPosRX(gateid)# - стартовая позиция RX
#gateStartPosRY(gateid)# - стартовая позиция RY
#gateStartPosRZ(gateid)# - стартовая позиция RZ
#gateStopPosXYZ(gateid)# or gatePos - конечная позиция
#gateStopPosX(gateid)# or gatePos - конечная позиция
#gateStopPosY(gateid)# or gatePos - конечная позиция
#gateStopPosZ(gateid)# or gatePos - конечная позиция
#gateStopPosRXYZ(gateid)# or gatePos - конечная позиция RXYZ
#gateStopPosRX(gateid)# or gatePos - конечная позиция RX
#gateStopPosRY(gateid)# or gatePos - конечная позиция RY
#gateStopPosRZ(gateid)# or gatePos - конечная позиция RZ
Если начальная позиция будет совпадать с конечной то КБ не сработает!

Текстдравы:
#tdShown(slot)# - отображен ли текстдрав
#tdPos(slot)# #tdPosX(slot)# #tdPosY(slot)# - позиция текстдрава
#tdString(slot)# - строка текстдрава (если бокс _)
#tdSize(slot)# #tdSizeX(slot)# #tdSizeY(slot)# - размер текстдрава
#tdLetSize(slot)# #tdLetSizeX(slot)# #tdLetSizeY(slot)# - размер букв текста
#tdOutline(slot)# - размер обводки текста
#tdShadow(slot)# - размер тени текста
#tdAligment(slot)# - выравнивание (1 - право | 2 - центр | 3 - лево)
#isTdBox(slot)# - является ли текстдрав боксом
#tdClickable(slot)# - можно ли на текстдрав нажать
#tdTime(slot)# - время отображения текстдрава
#tdModel(slot)# - ид модели в боксе
#tdModelRotX(slot)# #tdModelRotY(slot)# #tdModelRotZ(slot)# - поворот
#tdModelZoom(slot)# - зум модели в боксе
#tdModelColor(slot)# - цвет модели в боксе (возвращается 2 параметра)